{"ast":null,"code":"var _jsxFileName = \"G:\\\\WORK\\\\Afeef Aqlan\\\\Parking-reservation\\\\Parking-reservation-reactapp\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is authenticated on mount\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('userRole');\n    if (token) {\n      setIsAuthenticated(true);\n      setUserRole(role);\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      // TODO: Replace with actual API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userRole', data.role);\n      setIsAuthenticated(true);\n      setUserRole(data.role);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      // TODO: Replace with actual API call\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      const data = await response.json();\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userRole');\n    setIsAuthenticated(false);\n    setUserRole(null);\n  };\n  const value = {\n    isAuthenticated,\n    userRole,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NKWPQ4bx5cryV5wpsBzv/niGOLI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userRole","setUserRole","loading","setLoading","token","localStorage","getItem","role","login","credentials","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setItem","success","error","console","message","register","userData","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["G:/WORK/Afeef Aqlan/Parking-reservation/Parking-reservation-reactapp/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userRole, setUserRole] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Check if user is authenticated on mount\n        const token = localStorage.getItem('token');\n        const role = localStorage.getItem('userRole');\n        \n        if (token) {\n            setIsAuthenticated(true);\n            setUserRole(role);\n        }\n        setLoading(false);\n    }, []);\n\n    const login = async (credentials) => {\n        try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(credentials),\n            });\n\n            if (!response.ok) {\n                throw new Error('Login failed');\n            }\n\n            const data = await response.json();\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('userRole', data.role);\n            \n            setIsAuthenticated(true);\n            setUserRole(data.role);\n            \n            return { success: true };\n        } catch (error) {\n            console.error('Login error:', error);\n            return { success: false, error: error.message };\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            // TODO: Replace with actual API call\n            const response = await fetch('/api/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n\n            if (!response.ok) {\n                throw new Error('Registration failed');\n            }\n\n            const data = await response.json();\n            return { success: true, data };\n        } catch (error) {\n            console.error('Registration error:', error);\n            return { success: false, error: error.message };\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userRole');\n        setIsAuthenticated(false);\n        setUserRole(null);\n    };\n\n    const value = {\n        isAuthenticated,\n        userRole,\n        login,\n        register,\n        logout,\n        loading\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}